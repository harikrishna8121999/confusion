[{"C:\\coursera\\react\\confusion\\src\\index.js":"1","C:\\coursera\\react\\confusion\\src\\App.js":"2","C:\\coursera\\react\\confusion\\src\\reportWebVitals.js":"3","C:\\coursera\\react\\confusion\\src\\components\\MenuComponent.js":"4","C:\\coursera\\react\\confusion\\src\\shared\\dishes.js":"5","C:\\coursera\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\coursera\\react\\confusion\\src\\components\\MainComponent.js":"7","C:\\coursera\\react\\confusion\\src\\components\\FooterComponent.js":"8","C:\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js":"9","C:\\coursera\\react\\confusion\\src\\components\\HomeComponent.js":"10","C:\\coursera\\react\\confusion\\src\\components\\ContactComponent.js":"11","C:\\coursera\\react\\confusion\\src\\shared\\comments.js":"12","C:\\coursera\\react\\confusion\\src\\shared\\promotions.js":"13","C:\\coursera\\react\\confusion\\src\\shared\\leaders.js":"14","C:\\coursera\\react\\confusion\\src\\components\\AboutComponent.js":"15","C:\\coursera\\react\\confusion\\src\\redux\\configureStore.js":"16","C:\\coursera\\react\\confusion\\src\\redux\\dishes.js":"17","C:\\coursera\\react\\confusion\\src\\redux\\comments.js":"18","C:\\coursera\\react\\confusion\\src\\redux\\leaders.js":"19","C:\\coursera\\react\\confusion\\src\\redux\\promotions.js":"20","C:\\coursera\\react\\confusion\\src\\redux\\ActionTypes.js":"21","C:\\coursera\\react\\confusion\\src\\redux\\ActionCreators.js":"22","C:\\coursera\\react\\confusion\\src\\components\\LoadingComponent.js":"23"},{"size":639,"mtime":1610027097795,"results":"24","hashOfConfig":"25"},{"size":531,"mtime":1610517745158,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":2221,"mtime":1611573616415,"results":"28","hashOfConfig":"25"},{"size":1490,"mtime":1610035956613,"results":"29","hashOfConfig":"25"},{"size":5782,"mtime":1611759441754,"results":"30","hashOfConfig":"25"},{"size":3045,"mtime":1611761040133,"results":"31","hashOfConfig":"25"},{"size":2639,"mtime":1610033100161,"results":"32","hashOfConfig":"25"},{"size":5063,"mtime":1610461275520,"results":"33","hashOfConfig":"25"},{"size":1477,"mtime":1611757898695,"results":"34","hashOfConfig":"25"},{"size":11033,"mtime":1611934787065,"results":"35","hashOfConfig":"25"},{"size":4279,"mtime":1610036169277,"results":"36","hashOfConfig":"25"},{"size":445,"mtime":1610036082388,"results":"37","hashOfConfig":"25"},{"size":2382,"mtime":1610036142333,"results":"38","hashOfConfig":"25"},{"size":4429,"mtime":1610458347015,"results":"39","hashOfConfig":"25"},{"size":616,"mtime":1611572535550,"results":"40","hashOfConfig":"25"},{"size":642,"mtime":1611572784005,"results":"41","hashOfConfig":"25"},{"size":505,"mtime":1611500246477,"results":"42","hashOfConfig":"25"},{"size":185,"mtime":1611405137127,"results":"43","hashOfConfig":"25"},{"size":197,"mtime":1611405139485,"results":"44","hashOfConfig":"25"},{"size":178,"mtime":1611572585694,"results":"45","hashOfConfig":"25"},{"size":795,"mtime":1611572683963,"results":"46","hashOfConfig":"25"},{"size":256,"mtime":1611572855311,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q1d81f",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\coursera\\react\\confusion\\src\\index.js",[],["98","99"],"C:\\coursera\\react\\confusion\\src\\App.js",[],"C:\\coursera\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\coursera\\react\\confusion\\src\\components\\MenuComponent.js",[],"C:\\coursera\\react\\confusion\\src\\shared\\dishes.js",[],"C:\\coursera\\react\\confusion\\src\\components\\DishdetailComponent.js",["100","101","102"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({ isModalOpen: !this.state.isModalOpen });\r\n  };\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm\r\n              onSubmit={(values) => {\r\n                this.handleSubmit(values);\r\n              }}\r\n            >\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select\r\n                  className=\"form-control\"\r\n                  name=\"rating\"\r\n                  model=\".rating\"\r\n                >\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"author\">Your Name</Label>\r\n                <Control.text\r\n                  className=\"form-control\"\r\n                  name=\"author\"\r\n                  id=\"author\"\r\n                  model=\".author\"\r\n                  validators={{\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    minLength: \"Must be greater than 2 characters\",\r\n                    maxLength: \"Must be 15 characters or less\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"comment\">Comment</Label>\r\n                <Control.textarea\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  model=\".comment\"\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst RenderDish = ({dish}, props) => {\r\n   if (props.dish) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <Card>\r\n          <CardImg width=\"100%\" src={dish.image} alt={dish.name}></CardImg>\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nconst RenderComments = ({ comments, addComment, dishId }) => {\r\n  if (comments) {\r\n    const commentList = comments.map((comment) => {\r\n      return (\r\n        <li key={comment.id}>\r\n          <p>{comment.comment}</p>\r\n          <p>\r\n            -- {comment.author} ,{\" \"}\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"short\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(Date.parse(comment.date)))}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">{commentList}</ul>\r\n        <CommentForm dishId={dishId} addComment={addComment} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nconst DishDetail = (props) => {\r\n  if (props.isLoading) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nelse if (props.errMess) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <h4>{props.errMess}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nelse if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments comments={props.comments}\r\n           addComment={props.addComment}\r\n           dishId={props.dish.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default DishDetail;","C:\\coursera\\react\\confusion\\src\\components\\MainComponent.js",["103","104","105"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}\r\n\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n     }\r\n\r\n     componentDidMount() {\r\n      this.props.fetchDishes();\r\n    }\r\n\r\n   render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const AboutPage =()=>{\r\n      return(\r\n        <About leaders={this.props.leaders}/>\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        addComment={this.props.addComment}\r\n      />\r\n      );\r\n    };\r\n     return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path=\"/aboutus\" component={AboutPage}/>\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","C:\\coursera\\react\\confusion\\src\\components\\FooterComponent.js",[],"C:\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\coursera\\react\\confusion\\src\\components\\HomeComponent.js",[],"C:\\coursera\\react\\confusion\\src\\components\\ContactComponent.js",["106","107","108","109","110","111","112","113","114","115"],"C:\\coursera\\react\\confusion\\src\\shared\\comments.js",[],"C:\\coursera\\react\\confusion\\src\\shared\\promotions.js",[],"C:\\coursera\\react\\confusion\\src\\shared\\leaders.js",[],"C:\\coursera\\react\\confusion\\src\\components\\AboutComponent.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\configureStore.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\dishes.js",["116"],"import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\coursera\\react\\confusion\\src\\redux\\comments.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\leaders.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\promotions.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\coursera\\react\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\coursera\\react\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":53,"column":17,"nodeType":"123","endLine":57,"endColumn":18},{"ruleId":"121","severity":1,"message":"124","line":67,"column":17,"nodeType":"123","endLine":76,"endColumn":19},{"ruleId":"121","severity":1,"message":"125","line":89,"column":17,"nodeType":"123","endLine":95,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"130","line":2,"column":18,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":34,"column":3,"nodeType":"133","messageId":"134","endLine":37,"endColumn":7},{"ruleId":"126","severity":1,"message":"135","line":4,"column":19,"nodeType":"128","messageId":"129","endLine":4,"endColumn":23},{"ruleId":"126","severity":1,"message":"136","line":4,"column":43,"nodeType":"128","messageId":"129","endLine":4,"endColumn":50},{"ruleId":"137","severity":1,"message":"138","line":62,"column":29,"nodeType":"123","endLine":62,"endColumn":71},{"ruleId":"121","severity":1,"message":"124","line":78,"column":37,"nodeType":"123","endLine":84,"endColumn":44},{"ruleId":"121","severity":1,"message":"124","line":100,"column":37,"nodeType":"123","endLine":106,"endColumn":44},{"ruleId":"121","severity":1,"message":"124","line":122,"column":37,"nodeType":"123","endLine":128,"endColumn":44},{"ruleId":"121","severity":1,"message":"124","line":145,"column":37,"nodeType":"123","endLine":151,"endColumn":44},{"ruleId":"121","severity":1,"message":"139","line":167,"column":45,"nodeType":"123","endLine":169,"endColumn":52},{"ruleId":"121","severity":1,"message":"122","line":175,"column":37,"nodeType":"123","endLine":176,"endColumn":66},{"ruleId":"121","severity":1,"message":"125","line":185,"column":37,"nodeType":"123","endLine":187,"endColumn":68},{"ruleId":"126","severity":1,"message":"140","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]