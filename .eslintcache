[{"C:\\coursera\\react\\confusion\\src\\index.js":"1","C:\\coursera\\react\\confusion\\src\\App.js":"2","C:\\coursera\\react\\confusion\\src\\reportWebVitals.js":"3","C:\\coursera\\react\\confusion\\src\\components\\MenuComponent.js":"4","C:\\coursera\\react\\confusion\\src\\shared\\dishes.js":"5","C:\\coursera\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\coursera\\react\\confusion\\src\\components\\MainComponent.js":"7","C:\\coursera\\react\\confusion\\src\\components\\FooterComponent.js":"8","C:\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js":"9"},{"size":639,"mtime":1610027097795,"results":"10","hashOfConfig":"11"},{"size":238,"mtime":1609681474050,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":994,"mtime":1610007045765,"results":"14","hashOfConfig":"11"},{"size":6065,"mtime":1609428221749,"results":"15","hashOfConfig":"11"},{"size":2166,"mtime":1610007595884,"results":"16","hashOfConfig":"11"},{"size":883,"mtime":1610027385541,"results":"17","hashOfConfig":"11"},{"size":2564,"mtime":1610027292193,"results":"18","hashOfConfig":"11"},{"size":904,"mtime":1610027184063,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q1d81f",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\coursera\\react\\confusion\\src\\index.js",[],"C:\\coursera\\react\\confusion\\src\\App.js",[],["42","43"],"C:\\coursera\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\coursera\\react\\confusion\\src\\components\\MenuComponent.js",["44","45"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction RenderMenuItem ({dish,onClick}) {\r\n    return(\r\n        <Card onClick={() => onClick(dish.id)}>\r\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Card>\r\n\r\n       );\r\n   }\r\n   const Menu = (props) => {\r\n\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n               <RenderMenuItem dish ={dish} onClick={props.onClick} />\r\n            </div>\r\n            );\r\n        });\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n     }\r\n\r\nexport default Menu;","C:\\coursera\\react\\confusion\\src\\shared\\dishes.js",[],["46","47"],"C:\\coursera\\react\\confusion\\src\\components\\DishdetailComponent.js",["48"],"import React  from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction RenderDish({dish}) {\r\n        if (dish != null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments}) {\r\n        if (comments != null){\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                     <h4>Comments</h4>\r\n                      <ul className=\"list-unstyled\">\r\n                          {comments.map((comment) => {\r\n                              return (\r\n                                 <li key={comment.id}>\r\n                                     <p>{comment.comment}</p>\r\n                                     <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                                 </li>\r\n                              );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                );\r\n            }\r\n        else \r\n            return (\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    const  DishDetail = (props) => {\r\n        if (props.dish != null)\r\n           return ( \r\n            <div class = \"container\">\r\n            <div className=\"row\">\r\n                <RenderDish dish ={props.dish} />\r\n                <RenderComments comments = {props.dish.comments} />\r\n            </div>   \r\n            </div>\r\n           );\r\n        else \r\n           return(\r\n               <div></div>\r\n           );\r\n         \r\n    }\r\n\r\n\r\nexport default DishDetail;","C:\\coursera\\react\\confusion\\src\\components\\MainComponent.js",["49","50"],"C:\\coursera\\react\\confusion\\src\\components\\FooterComponent.js",["51","52","53"],"C:\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":41,"nodeType":"60","messageId":"61","endLine":2,"endColumn":49},{"ruleId":"58","severity":1,"message":"62","line":2,"column":51,"nodeType":"60","messageId":"61","endLine":2,"endColumn":59},{"ruleId":"54","replacedBy":"63"},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","severity":1,"message":"65","line":2,"column":25,"nodeType":"60","messageId":"61","endLine":2,"endColumn":39},{"ruleId":"58","severity":1,"message":"66","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":2,"column":18,"nodeType":"60","messageId":"61","endLine":2,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":11,"column":29,"nodeType":"70","endLine":11,"endColumn":41},{"ruleId":"68","severity":1,"message":"69","line":12,"column":29,"nodeType":"70","endLine":12,"endColumn":41},{"ruleId":"68","severity":1,"message":"69","line":13,"column":29,"nodeType":"70","endLine":13,"endColumn":41},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.",["71"],["72"],"'CardImgOverlay' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]